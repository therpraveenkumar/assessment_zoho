#$Id$
#========================================================================
#================ Destination database configuration ====================
#========================================================================
#Create dest database if it is not exist, default is true
create.dest.db=true

#Destination database name to be created, by default destination database
#name will be fetched from connection URL. Below configuration will work
#only if the create.dest.db=true. If "dest.create.db" is false and database 
#in dest DB will not be created 
dest.create.db.name=mickeylite

#Disable db migration resume. Default is false
#If true then the destination database will be reinitialized before starting
#migration process

migration.resume.disable=true


#To start bundled destination database.
start.dest.postgres.server=true

#Bundled destination database binaries directory. 
#Requires start.dest.postgres.server to be true
# Eg : dest.db.postgres.dir=../pgsql
dest.db.<dbname>.dir=<directory location>

#========================================================================
#======================= List of Handlers ===============================
#========================================================================
#mickey based table's handlers
handlers=handler1, handler2
#non-mickey table's handlers
nonmickey.handlers=handler3

#========================================================================
#===================== Pre/Post handler classes. ========================
#========================================================================

# Pre/Post handler classes. Provides handle during both Pre and Post DBMigration stages
# eg : com.adventnet.db.migration.handler.DBMServerCheckPreHandler, 
#	com.adventnet.db.migration.handler.DiskCheckPreHandler
dbmigration.prepost.handlers=<comma separated handler names>


#========================================================================
#============ Handler properties for Mickey based products ==============
#========================================================================
#Class name of the handler
handler1.class=com.adventnet.db.migration.handler.DefaultDBMigrationHandler
#Handler for the modules
handler1.module=module3,module5
#Handler for the tables
handler1.table=table1,table2,table3
#Handler for table rows (by default disabled for all tables)
handler1.row=table2,table5

handler2.class=com.adventnet.db.migration.handler.DefaultDBMigrationHandler
handler2.module=module1,module2,module4
handler2.row=table9,table4

#========================================================================
#============ Handler properties for non Mickey based tables ============
#========================================================================
#Handler class name
handler3.class=com.adventnet.db.migration.handler.DefaultNonMickeyTablesHandler
#Handler for non-mickey tables
handler3.table=mytable2,mytable3,mytable4
#Handler for non-mickey table rows
handler3.row=mytable4

#========================================================================
#================= List of table need to be ignored =====================
#========================================================================
# To ignore specific or group tables
migrate.table.ignore=table8

# To ignore data of the specific or group tables(ie., migrate only table structure not table data)
migrate.table.ignore.data=table8

# To ignore all non-mickey based tables
nonmickey.table.ignore.all=true

#========================================================================
#======== Insert batch size of the table (default size is 100) ==========
#========================================================================
table.default.batchsize=100
table.table3.batchsize=50
table.table6.batchsize=500

#========================================================================
#========     DBMigration adapter class configurations.   ===============
#========================================================================
# DBMigration adapter class name if it is extended
dbmigration.adapter.class=com.adventnet.db.migration.adapter.DBMigrationAdapter

# DBMigration worker pool size configuration.
dbmigration.workerpool.size=10

# Progress notifier class. Default is ConsoleProgressNotifier
dbmigration.notifier=com.adventnet.db.migration.notifier.ConsoleProgressNotifier

#========================================================================
#========     DBMigration sanity test configurations.     ===============
#========================================================================
# name of the module which needs sanity test. Sanity test is mandatory for 
#'Persistence' module it can't be disabled.
sanity.test.module=

# Name (or) name pattern of the table(s) which need sanity test.
sanity.test.table=

# To run sanity for particular column(s). By default comparison will be done
# for all columns in the table(ie., select * from table)
# Eg,  sanity.test.Employee.columns=EMP_ID,EMP_NAME
sanity.test.<tablename>.columns=

# Global configuration(not applicable for Persistence module tables). If the below property 
# is configured then comparison will be done only for specified datatypes
# Eg, sanity.test.column.types=SCHAR,CHAR,NCHAR
# Value should be either comma-separated list of columns (or) '*' (default)
sanity.test.column.types=*

# To run sanity for particular column type(s) in a table(s). By default comparison will be done
# for all data types. 
# Eg,  sanity.test.Employee.columns.type=SCHAR,CHAR,DATETIME
# This configuration has more priority then sanity.test.column.types configuration.
sanity.test.<tablename>.column.types=

# Handler class for sanity test. It might be useful when table data need 
# to be tested with some criteria. By default comparison will be done for
# all data in the table.
sanity.test.handler.class=

#To exclude table from running sanity test for it. Either table name or table pattern can be given
sanity.test.table.exclude=

dest.default.dctype=defaultdc

