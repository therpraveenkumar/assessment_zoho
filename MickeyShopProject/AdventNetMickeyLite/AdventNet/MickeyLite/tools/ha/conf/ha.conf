# $Id$

# Ip address of current node
# @defaultValue: the primary IP Address of this host
# ipaddr =


# List of Master health detectors to detect master status separated by comma's
# example: com.zoho.mickey.ha.slave.HttpBasedMasterHealthDetector
# masterhealth.detectorlist = 

##########################################################################################
##					CORE MASTERHEALTH DETECTOR (DB BASED HEARTBEAT) properties          ##
##########################################################################################

# Periodic Interval (in Secs)  at which node updates its counter value (heartbeat) in DB
# @defaultValue=5
# updatecounter.interval = 5

# Maximum attempts for a single Heartbeat update operation. (DB operations may fail during runtime. Since HA relies on heartbeat update,DB operations are critical, the application shuts down if update fails after retyring dbFailureRetryCount times
# @deafultValue=2
# dbfailure.retrycount =

# Interval (in Secs) after which then next DB attempt should happen
# @defaultValue=10
# dbfailure.retryinterval =

# Ratio of poll interval to update counter value.
# @defaultValue=2
# ratioOfPollIntervaltoUpdateCounter = 2

# pollInterval: Periodic interval (in Secs) at which the node should check the peer node's counter value.
# It is internally as follows pollInterval= ratioOfPollIntervaltoUpdateCounter * updatecounter.interval

# Number of retries (checking other node's counter value) before deciding that the peer node is down.
# @deafultValue=3
# updatecounter.failureRetryCount =

##########################################################################################
##					HTTP BASED MASTERHEALTH DETECTOR properties                         ## 
##########################################################################################

# Http based polling enabled
http.poll.enabled = true

## The 'uri' used for polling(http based) the master
http.poll.URI = /ha/statuscheck

# Periodic interval (in secs) at which this http based polling should occur
# @defaultValue: 90
http.poll.interval = 20

# Number of times HA(in slave mode) retries before giving up on this http based 'polling'
# @defaultValue: 3
http.poll.retrycount = 2

# ConnectionTimeout(in millis) to be set for the HTTP requests
# @defaultValue: 1000
# http.poll.conntimeout = 

# ReadTimeout(in millis) to be set for the HTTP requests
# @defaultValue: 1000
# http.poll.readtimeout = 

# Scheme to be used http/https
# @defaultValue = http
# http.poll.protocol =

# connectorPort of peer node
# @defaultValue = 8080
# http.poll.connectorport =

# The class that will perform the hostname verification during HTTPS handshake failures
# This class must implement the javax.net.ssl.HostnameVerifier interface. 
# @optional: If not specified, no HostnameVerifier class will bet set.
# http.poll.hostnameverifierclass =

#########################################################################################
##								PUBLIC-IP - properties                       		   ##
#########################################################################################

# Enable public IP binding. Master will bind to this IP on startup and slave will bind it after takeover
# @defaultValue=false
# publicIP.enabled = true

# The IP that will be exposed to the users. Normally this would be a 'virtual ip' 
# (and hence transient in nature) and will be binded to the node that is currently 
# running in 'master' mode.
# publicIP.ipaddr = 

# The name of the 'network interface card' to which the above mentioned 'publicIP' 
# needs to be associated. To find out the NIC name, invoke the 'exe' bin\windows\iflist.exe
# example: publicIPIfName =  {3C39DC12-CD74-415C-9A92-9AECA19422A3}
# publicIP.Ifname = 

# The net mask to be used while adding the above mentioned 'publicIP'
# publicIP.netmask = 255.255.255.0

# IP binding retry interval (Secs)
# @defaultValue = 30
# publicIP.retryinterval =

# IP binding retry count
# @defaultValue =3
# publicIP.retryCount =

##########################################################################################
## 							 	File replication										##
##########################################################################################
 
# Enable File replication
# @ defaultValue =false
# repl.enabled = true

# Replication handler 
# @ defaultValue: com.zoho.mickey.ha.filereplication.DefaultFileReplicationHandler
# repl.handler = 

# Remote installation directory
# example repl.remoteinstallationDir = sharename\\AdventNet\\MickeyLite
# repl.remoteinstallationDir = 

# Replication schedule delay (in Mins)
# repl.scheduledelay = 

# wait for replication schedule to complete before proceeding to completePendingReplication schedule (in Secs)
# @defaultValue = 180  
# repl.waitforcompletion =

# Contains robocopy generated log for last schedule alone
# @defaultValue = ../logs/fileRepl.txt
# repl.log =

# script file for replication
# @defaultValue = ReplicateFiles.bat
# repl.script =

## Sharing properties ##

# Denotes whether windows sharing is enabled or net use command (passing credentials) has to be used
# @defaultValue = false
# repl.usecredentials =

# If use credentials is enabled specify the following properties
# Name of windows share 
# repl.sharename =

# Username to log in (user with which we are logging in should have access to the folder to be replicated)
# repl.username =

# Password 
# repl.password =

## Mirror Properties ##

# List of folders to be mirrored separated by comma's (Path relative to server home)
# Format: 1:dir1, 2:dir2
# example: repl.mirrorlist= 1:mirrorDir,2:conf,3:lib
# repl.mirrorlist =

# List of sub directories to be omitted while mirroring the directory specified above (Paths relative to 'dir's specified in repl.mirrordir property)
# Format: 1:sub_dir1,sub_dir2 ; 2:sub_dir1 ; 3:sub_dir1,sub_dir2
# example: repl.mirror.excludedir = 1:dir;2:audit,persistence;
# Above will mirror the all the sub directories of 'mirrorDir'except 'dir', similarly all sub dir's of 'conf' except 'audit' and 
# 'persistence'. The third dir 'lib' is mirrored fully
# repl.mirror.excludedir =


# List of files to be omitted while mirroring the directory specified above (Paths relative to 'dir's specified in repl.mirrordir property)
# Format: 1:file_a,file_b ; 2:file_a ; 
# example: repl.mirror.excludefile = 1:abc.conf;2:abc.conf,Tomcat\\bc.conf
# Files that will be excluded : mirrorDir/abc.conf, conf/abc.conf, conf/Tomcat/bc.conf
# repl.mirror.excludefile =


## Copy Properties ##

# List of folders to be copied separated by comma's (Path relative to server home)
# Format: 1:dir1, 2:dir2
# example: repl.copylist = 1:bin,2:webapps
# repl.copylist =


# List of sub directories to be omitted while copying the directory specified above (Paths relative to 'dir's specified in repl.mirrordir property)
# Format: 1:sub_dir1,sub_dir2 ; 2:sub_dir1 ; 3:sub_dir1,sub_dir2 (same as repl.mirror.excludedir)
# repl.copy.excludedir =

# List of files to be omitted while copying the directory specified above (Paths relative to 'dir's specified in repl.mirrordir property)
# Format: 1:file_a,file_b ; 2:file_a  (same as repl.mirror.excludefile)
# repl.copy.excludefile =


###############################################################################################
##										Others                                               ##
###############################################################################################


# Error handler for handling HA related errors
# @deafultValue = com.zoho.mickey.ha.DefaultErrorHandler 
# ha.errorhandler

# Handler that can be used to perform user specified functions while slave take over
# takeover.handler =

# Directory containing ipadd related exe's
# @defaultValue = ./
# tools.dir

# Remove an entry to add new node. 
# replace.ipaddr =
# replace.hostname =

repl.mirrorlist = 1:conf\\udt

