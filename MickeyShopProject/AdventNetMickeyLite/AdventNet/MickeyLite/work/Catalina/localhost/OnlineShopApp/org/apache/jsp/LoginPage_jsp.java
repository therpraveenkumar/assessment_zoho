/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.x-dev
 * Generated at: 2024-11-14 04:59:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class LoginPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"container d-flex align-items-center justify-content-center\"\r\n");
      out.write("		style=\"min-height: 40vh; margin-top: 20vh; margin-left: 35%\">\r\n");
      out.write("		<div class=\"centre-div align-items-center justify-content-center\">\r\n");
      out.write("			<div class=\"card\" style=\"width: 400px;\">\r\n");
      out.write("				<h3 class=\"text-center\">ONLINE SHOPPING</h3>\r\n");
      out.write("				<div class=\"card-body\">\r\n");
      out.write("					<h5 class=\"card-title text-center\">Login</h5>\r\n");
      out.write("					<form method=\"post\" action=\"validator\">\r\n");
      out.write("						<input type=\"hidden\" name=\"action\" value=\"login\">\r\n");
      out.write("						<div class=\"mb-3\">\r\n");
      out.write("							<label for=\"email\" class=\"form-label\">Email address</label> <input\r\n");
      out.write("								type=\"email\" class=\"form-control\" id=\"email\" name=\"email\"\r\n");
      out.write("								required>\r\n");
      out.write("						</div>\r\n");
      out.write("						<br>\r\n");
      out.write("						<div class=\"mb-3\">\r\n");
      out.write("							<label for=\"password\" class=\"form-label\">Password</label> <input\r\n");
      out.write("								type=\"password\" class=\"form-control\" id=\"password\"\r\n");
      out.write("								name=\"password\" required>\r\n");
      out.write("						</div>\r\n");
      out.write("						<br>\r\n");
      out.write("						<button type=\"submit\" class=\"btn btn-primary w-100\">Login</button>\r\n");
      out.write("					</form>\r\n");
      out.write("					<div class=\"text-center mt-3\">\r\n");
      out.write("						<a href=\"#\" data-toggle=\"modal\" data-target=\"#emailModal\">Forgot\r\n");
      out.write("							your password?</a>\r\n");
      out.write("\r\n");
      out.write("						<!-- forgot password Modal -->\r\n");
      out.write("						<div class=\"modal fade\" id=\"emailModal\" tabindex=\"-1\"\r\n");
      out.write("							aria-labelledby=\"addCategoryModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("							<div class=\"modal-dialog\">\r\n");
      out.write("								<div class=\"modal-content\">\r\n");
      out.write("									<div class=\"modal-header\">\r\n");
      out.write("										<h5 class=\"modal-title\" id=\"addCategoryModalLabel\">Forgot\r\n");
      out.write("											password</h5>\r\n");
      out.write("										<button type=\"button\" class=\"close\" data-dismiss=\"modal\"\r\n");
      out.write("											aria-label=\"Close\">\r\n");
      out.write("											<span>&times;</span>\r\n");
      out.write("										</button>\r\n");
      out.write("									</div>\r\n");
      out.write("									<div class=\"modal-body\">\r\n");
      out.write("										<p>Enter email:</p>\r\n");
      out.write("										<input type=\"email\" class=\"form-control\" id=\"email_\"\r\n");
      out.write("											placeholder=\"enter email\" required>\r\n");
      out.write("									</div>\r\n");
      out.write("									<div class=\"modal-footer\">\r\n");
      out.write("										<button type=\"button\" class=\"btn btn-secondary\"\r\n");
      out.write("											data-dismiss=\"modal\">Close</button>\r\n");
      out.write("										<button type=\"button\" class=\"btn btn-warning\"\r\n");
      out.write("											onclick=\"handleEmailSubmit(event)\">Submit</button>\r\n");
      out.write("									</div>\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"text-center mt-2\">\r\n");
      out.write("						<a href=\"signup\">Create an account</a>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://stackpath.bootstrapcdn.com/bootstrap/5.3.0/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("	<script>\r\n");
      out.write("		/**\r\n");
      out.write("		method to handle forgot password\r\n");
      out.write("		 */\r\n");
      out.write("		function handleEmailSubmit(event) {\r\n");
      out.write("			event.preventDefault();\r\n");
      out.write("			const email = document.getElementById('email_').value;\r\n");
      out.write("\r\n");
      out.write("			if (!email) {\r\n");
      out.write("				alert(\"Please fill the email field\");\r\n");
      out.write("				return;\r\n");
      out.write("			} else if (!validateEmail(email)) {\r\n");
      out.write("				alert(\"invalid email format.\");\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			const xhr = new XMLHttpRequest();\r\n");
      out.write("			xhr.open(\"POST\", \"validator?action=forgot_password&email=\" + email,\r\n");
      out.write("					true);\r\n");
      out.write("			xhr.onreadystatechange = function() {\r\n");
      out.write("				if (xhr.readyState === 4 && xhr.status === 200) {\r\n");
      out.write("					alert(xhr.responseText);\r\n");
      out.write("				}\r\n");
      out.write("			};\r\n");
      out.write("			xhr.send();\r\n");
      out.write("\r\n");
      out.write("			document.getElementById('email_').value = '';\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		/**\r\n");
      out.write("		validate email format\r\n");
      out.write("		 */\r\n");
      out.write("		function validateEmail(email) {\r\n");
      out.write("			const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n");
      out.write("			return emailRegex.test(email);\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
