# $Id$
#encoding=UTF-8
# Configuration files must begin with a line specifying the encoding
#  of the the file.
 
#********************************************************************
# Wrapper License Properties (Ignored by Community Edition)
#********************************************************************
# Professional and Standard Editions of the Wrapper require a valid
#  License Key to start.  Licenses can be purchased or a trial license
#  requested on the following pages:
# http://wrapper.tanukisoftware.com/purchase
# http://wrapper.tanukisoftware.com/trial
 
# Include file problems can be debugged by removing the first '#'
#  from the following line:
##include.debug
 
# The Wrapper will look for either of the following optional files for a
#  valid License Key.  License Key properties can optionally be included
#  directly in this configuration file.
#include ../conf/wrapper-license.conf
#include ../conf/wrapper-license-%WRAPPER_HOST_NAME%.conf
 
# The following property will output information about which License Key(s)
#  are being found, and can aid in resolving any licensing problems.
#wrapper.license.debug=TRUE
#********************************************************************
# Wrapper Properties
#********************************************************************
# Java Application
 
wrapper.event.jvm_prelaunch.command.argv.1=../bin/jreCorrector.sh
wrapper.event.jvm_prelaunch.command.block=TRUE
wrapper.event.jvm_prelaunch.command.block.timeout=20
wrapper.event.jvm_prelaunch.command.on_exit.0=CONTINUE
wrapper.event.jvm_prelaunch.command.on_exit.1970=SHUTDOWN
wrapper.event.jvm_prelaunch.command.on_exit.default=CONTINUE

#if using other jre change here
wrapper.java.command=%JAVA_HOME%/bin/java
# If jre is bundled, use below java
# wrapper.java.command=../jre/bin/java
 
# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp
 
# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
wrapper.java.classpath.1=../lib/wrapper.jar
wrapper.java.classpath.2=../lib/tomcat/tomcat-juli.jar
wrapper.java.classpath.3=run.jar
wrapper.java.classpath.4=../lib/conf.jar
wrapper.java.classpath.5=../lib/AdventNetUpdateManagerInstaller.jar
wrapper.java.classpath.6=../lib/AdventNetNPrevalent.jar
 
# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=../lib/native
 
# Java Additional Parameters
 
wrapper.java.additional.1=-Dcatalina.home=..
wrapper.java.additional.2=-Dserver.home=..
wrapper.java.additional.4=-Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
wrapper.java.additional.5=-Djava.util.logging.config.file=../conf/logging.properties
wrapper.java.additional.6=-Dlog.dir=..
wrapper.java.additional.7=-Ddb.home=%DB_HOME%
wrapper.java.additional.9=-Duser.language=en
wrapper.java.additional.10=-Dfile.encoding=utf8
#wrapper.java.additional.11=-DDEFAULT_HANDLER=com.adventnet.client.rad.BackUpXmlHandler 
 
#uncomment the following to enable JPDA debugging
#wrapper.java.additional.12=-Xdebug
#wrapper.java.additional.13=-Xnoagent
#wrapper.java.additional.14=-Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=n
 
# Initial Java Heap Size (in MB)
wrapper.java.initmemory=50
 
# Maximum Java Heap Size (in MB)
wrapper.java.maxmemory=256
 
# Application parameters.  Add parameters as needed starting from 1
wrapper.app.parameter.1=com.adventnet.mfw.Starter
 
#********************************************************************
# Wrapper General Properties
#********************************************************************
# Allow for the use of non-contiguous numbered properties
wrapper.ignore_sequence_gaps=TRUE
 
# For degugging
#wrapper.debug=TRUE
 
wrapper.ping.timeout=60
wrapper.ping.interval.logged=60
wrapper.ping.timeout.action=DUMP,RESTART
 
wrapper.jvm_exit.timeout=60
 
#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Format of output for the console.  (See docs for formats)
wrapper.console.format=PM
 
# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO
 
# Log file to use for wrapper output logging.
wrapper.logfile=../logs/wrapper.log
 
# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM
 
# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO
 
# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=0
 
# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=0
 
# Log Level for sevent log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE
 
#********************************************************************
# Wrapper NT Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.
 
# Name of the service
wrapper.ntservice.name=MickeyLite
 
# Display name of the service
wrapper.ntservice.displayname=MickeyLite
 
# Description of the service
wrapper.ntservice.description=MickeyLite Framework service
 
# Service dependencies.  Add dependencies as neesded starting from 1
wrapper.ntservice.dependency.1=
 
# Mode in which the service is installed.  AUTO_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START
 
# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false

#include.required ../conf/framework_wrapper_linux.conf

#include ../conf/fips_wrapper.conf
